# name: iOS starter workflow

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:
#     name: Build and Test default scheme using any available iPhone simulator
#     runs-on: macos-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Set Default Scheme
#         run: |
#           scheme_list=$(xcodebuild -list -json | tr -d "\n")
#           default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
#           echo $default | cat >default
#           echo Using default scheme: $default
#       - name: Build
#         env:
#           scheme: ${{ 'default' }}
#           platform: ${{ 'iOS Simulator' }}
#         run: |
#           # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
#           device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
#           if [ $scheme = default ]; then scheme=$(cat default); fi
#           if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
#           file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
#           xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
#       - name: Test
#         env:
#           scheme: ${{ 'default' }}
#           platform: ${{ 'iOS Simulator' }}
#         run: |
#           # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
#           device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
#           if [ $scheme = default ]; then scheme=$(cat default); fi
#           if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
#           file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
#           xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"



name: Testing
on:
  pull_request:
    branches:
    - master
jobs:
  test:
    name: Testing Swift Package and iOS app
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Force XCode 11.3
        run: sudo xcode-select -switch /Applications/Xcode_11.3.app
      - name: Testing Swift package
        run: exec ./.github/scripts/test_swift_package.sh
      - name: Testing iOS app
        run: exec ./.github/scripts/test_app.sh
